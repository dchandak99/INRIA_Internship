theory Simple
begin

functions: rep/2 [private], check_rep/2, get_rep/1
equations: check_rep(rep(m,loc),loc)=m, get_rep(rep(m,loc))=m

builtins: asymmetric-encryption

//heuristic: p /* heuristic for SAPIC */

rule Init_: // [process=top-level] Init 
 [] --[Init()]-> [State_()]

rule new_skk_: // [process=top-level] new skk 
 [State_(), Fr(skk)] --[]-> [State_1(skk)]

rule out_pkskk_1 [color=#569DC0]: // [process=P] out pk(skk) 
 [State_1(skk)] --[]-> [State_11(skk), Out(pk(skk))]

rule out_aencdiff_a_b__pkskk_11 [color=#569DC0]: // [process=P] out aenc(diff('a', 'b'), pk(skk)) 
 [State_11(skk)] --[]-> [State_111(skk), Out(aenc(diff('a', 'b'), pk(skk)))]

rule Zero_111 [color=#569DC0]: // [process=P] Zero 
 [State_111(skk)] --[]-> []


restriction single_session: // for a single session
    "All #i #j. Init()@i & Init()@j ==> #i=#j"

end
